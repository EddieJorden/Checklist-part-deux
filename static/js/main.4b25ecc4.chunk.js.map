{"version":3,"sources":["components/ListItem.jsx","components/images/balloons.jpeg","components/images/guineapig.jpg","components/Checklist.jsx","App.js","index.js"],"names":["ListItem","listItemText","checkedCount","setCheckedCount","useState","checked","setChecked","type","onChange","StyledBackground","styled","div","img","StyledTitle","StyledListItem","ol","StyledSubmitButton","StyledMessage","StyledContainer","Checklist","list","isWorthy","Math","round","length","buttonClick","setButtonClick","map","element","onClick","src","pic","alt","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAoBeA,EAlBE,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBAAqB,EACrCC,oBAAS,GAD4B,mBAC5DC,EAD4D,KACnDC,EADmD,KAQhE,OAEA,gCACA,uBAAOC,KAAK,WAAWC,SATH,YACrBH,GAAWF,EAAgBD,EAAa,GACzCG,GAAWF,EAAgBD,EAAa,GACxCI,GAAYD,MAOV,gCAAQJ,Q,OCdG,MAA0B,sCCA1B,MAA0B,sCCMnCQ,EAAmBC,IAAOC,IAAV,8NACGC,GAUnBC,EAAcH,IAAOC,IAAV,qHAMXG,EAAiBJ,IAAOK,GAAV,iGAKdC,EAAqBN,IAAOC,IAAV,oKAUlBM,EAAgBP,IAAOC,IAAV,2IAQbO,EAAkBR,IAAOC,IAAV,+KAiDNQ,EAtCG,WACd,IAAMC,EAAO,CAAC,4BAA6B,gCAAiC,6BAA8B,kCAAmC,qCADzH,EAEoBhB,mBAAS,GAF7B,mBAEbF,EAFa,KAECC,EAFD,KAIdkB,EADoBC,KAAKC,MAAMrB,EAAekB,EAAKI,OAAS,KAC7B,GAJjB,EAKkBpB,mBAAS,MAL3B,mBAKbqB,EALa,KAKAC,EALA,KASpB,OACA,cAACjB,EAAD,UACI,eAACS,EAAD,WACA,cAACL,EAAD,uBACA,8BACA,cAACC,EAAD,UACKM,EAAKO,KAAI,SAACC,GAAD,OAAa,cAAC,EAAD,CACnB3B,aAAc2B,EACd1B,aAAcA,EACdC,gBAAiBA,WAKzB,cAACa,EAAD,CAAoBa,QAAS,kBAAMH,GAAe,IAAlD,0BAGA,cAACT,EAAD,UACCI,IAAaI,GAAgB,eAACR,EAAD,gCAAiC,6BAG9DI,IAAaI,GAAgB,eAACR,EAAD,WAAe,8BAAK,qBAAKa,IAAKC,EAAKC,IAAI,cAAvC,gBCzEvBC,MAVf,WACC,OACC,8BACC,qBAAKC,UAAU,MAAf,SACC,cAAC,EAAD,SCHJC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.4b25ecc4.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst ListItem = ({listItemText, checkedCount, setCheckedCount}) => {\n\tconst [checked, setChecked] = useState(false);\n\tconst handleOnChange = () => {\n\t\t!checked && setCheckedCount(checkedCount+1);\n\t\tchecked && setCheckedCount(checkedCount-1);\n\t\tsetChecked(!checked)\n\t}\n\n    return (\n\n    <div>\n    <input type='checkbox' onChange={handleOnChange}/>\n    <label>{listItemText}</label>\n    </div>)\n}\n    \n    \n\nexport default ListItem; ","export default __webpack_public_path__ + \"static/media/balloons.cf026d49.jpeg\";","export default __webpack_public_path__ + \"static/media/guineapig.0b1d5ef1.jpg\";","import React, {useState} from 'react';\nimport ListItem from './ListItem';\nimport styled from 'styled-components';\nimport img from './images/balloons.jpeg';\nimport pic from './images/guineapig.jpg'\n\nconst StyledBackground = styled.div`\n\tbackground-image: url(${img});\n\tbackground-position: center;\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat;\n\tposition: absolute;\n\theight: 100%;\n\twidth: 100%;\n    border: 0;\n`\n\nconst StyledTitle = styled.div`\n    color: white;\n    font-size: 50px;\n    margin-top: 80px;\n    text-align: center;\n`\nconst StyledListItem = styled.ol`\n    text-align: center;\n    margin-right: 60px;\n    color: white;\n`\nconst StyledSubmitButton = styled.div`\n   align-items: center;\n   border: 2px solid white;\n   margin-right: 15px;\n   cursor: pointer;\n   width: 100px;\n   color: white\n\n`\n\nconst StyledMessage = styled.div`\n    font-color: white;\n    font-border: red;\n    color: white;\n    margin-top: 40px;\n    font-size: 40px;\n`\n\nconst StyledContainer = styled.div`\nwidth: 100%;\n\n//  width: 600px;\n align-items: center;\n display: flex;\n flex-direction: column;\n// justify-content; center;\npadding-top: o;\n`\n\nconst Checklist = () => {\n    const list = ['do you know how to relax?', 'have you ever been to a park?', 'have you ever read a book?', 'do you even own fuzzy slippers?', 'do you listen to classical music?']\n    const [checkedCount, setCheckedCount] = useState(0);\n    const percentageClicked = Math.round(checkedCount / list.length * 100);\n    const isWorthy = percentageClicked > 88 ? true : false;\n    const [buttonClick, setButtonClick] = useState(null);\n\n   \n    \n    return (\n    <StyledBackground>\n        <StyledContainer>\n        <StyledTitle>Relax...</StyledTitle>\n        <div>\n        <StyledListItem>\n            {list.map((element) => <ListItem\n                listItemText={element}\n                checkedCount={checkedCount}\n                setCheckedCount={setCheckedCount}\n            />)}\n        </StyledListItem>\n        </div>\n        \n        <StyledSubmitButton onClick={() => setButtonClick(true)} >\n            worthy Check\n         </StyledSubmitButton>\n        <StyledMessage>\n       {(isWorthy === buttonClick) && <StyledMessage>congratulations...<div></div></StyledMessage>}\n       </StyledMessage>\n       \n       {(isWorthy === buttonClick) && <StyledMessage><div><img src={pic} alt='hamster'/></div>    </StyledMessage>}\n       </StyledContainer>\n      \n    </StyledBackground>)\n};\n\n\n\nexport default Checklist;","import './App.css';\n\nimport CheckList from './components/Checklist';\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"App\">\n\t\t\t\t<CheckList />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}